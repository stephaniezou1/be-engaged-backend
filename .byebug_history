c
self
results["pollingLocations"]
polling_addresses = results["pollingLocations"][0]["address"].to_json
results
c
user_params
@user
c
results["contests"]
JSON.parse(new_address)
new_address = results["pollingLocations"][0]["address"].to_json
new_address
parsed_address = JSON.parse(new_address)
new_address
new_address = JSON.parse(results["pollingLocations"][0]["address"])
new_address = JSON.stringify(results["pollingLocations"][0]["address"])
results
JSON.parse(new_address)
new_address
new_address = results["pollingLocations"][0]["address"].to_s
new_address = results["pollingLocations"][0]["address"].to_string
results["pollingLocations"][0]["address"]
results["pollingLocations"]
results.keys
results = JSON.parse(hometowns)
hometowns.keys
hometowns["pollingLocations"]
JSON.parse(hometowns["pollingLocations"])
JSON.parse(hometowns)
hometowns
c
@user.destroy
user.destroy
@user
c
@user
user
user_params
c
user_params
params
@user
c
user_params
@user
params
c
current_user
decoded_token
@user
c
params
c
params
@user.id
c
@follow
        @follow = Follow.create(user_id: user_id, election_id: election_id)
        election_id = params[:follow][:election_id]
user_id = @user.id 
   18:         @follow = Follow.create(user_id: user_id, election_id: election_id)
   17:         election_id = params[:follow][:election_id]
user_id = @user.id 
c
params
quit!
quit
@follow
quit
        election_id = params[:follow][:election_id]
params
@election
@user
@follows
c
@elections
c
Election.first
@elections.first
@election
@elections
elections
@elections
Election.all
@elections
c
@user
c
@user.errors.full_messages
@user.errors
@user
c
@user.authenticate(params[:password])
@user
c
@user
continue
elections_objec
elections
